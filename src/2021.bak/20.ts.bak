export function part1(input: string[]): any {
    let algo = input.shift();
    if (algo == undefined) {
        throw new Error("ugh");
    }
    input.shift();
    // // // console.log(input[0]);
    let num = 10;
    let eTimes = 50;

    for (let i = 0; i < eTimes; i++) {
        input = enhance(input, algo, num + 1);
    }

    for (let i = 0; i <= num + 1; i++) {
        input.shift();
        input.pop();
    }

    for (let i = 0; i < input.length; i++) {
        input[i] = input[i].slice(num + 1, input[i].length - num)
    }
    // // // console.log(input);
    let count = 0;
    for (let y = 0; y < input.length; y++) {
        // // // console.log(input[y]);
        for (let x = 0; x < input[y].length; x++) {
            count += (input[y][x] == '#' ? 1 : 0);
        }
    }
    return count;
}

function enhance(input: string[], algo: string, buf = 1): string[] {
    for (let i = 0; i < input.length; i++) {
        input[i] = `${'.'.repeat(buf)}${input[i]}${'.'.repeat(buf)}`;
    }

    for (let i = 0; i < buf; i++) {
        input.unshift('.'.repeat(input[0].length));
        input.push('.'.repeat(input[0].length));
    }

    let getIndex = (x: number, y: number): number => {
        let str = '';
        
        let points = [
            [x - 1, y - 1],
            [x, y - 1],
            [x + 1, y - 1],
            [x - 1, y],
            [x, y],
            [x + 1, y],
            [x - 1, y + 1],
            [x, y + 1],
            [x + 1, y + 1]
        ];

        for (let p of points) {
            if (p[0] < 0 || p[0] >= input[0].length) {
                str += '.';
                continue;
            }
            if (p[1] < 0 || p[1] >= input.length) {
                str += '.';
                continue;
            }
            str += input[p[1]][p[0]];
        }

        let nStr = '';
        for (let s of str) {
            nStr += (s == '#' ? '1' : '0');
        }
        return parseInt(nStr, 2);
    };

    let outArr: string[] = [];
    let outStr = '';

    for (let y = 0; y < input.length; y++) {
        outStr = '';
        for (let x = 0; x < input[0].length; x++) {
            let idx = getIndex(x, y);
            // outStr += input[y][x];
            outStr += algo[idx];
        }
        outArr.push(outStr);
    }
    return outArr;
}

export function part2(input: string[]): any {
    
}